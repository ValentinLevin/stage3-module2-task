plugins {
    id 'java-base'
}

wrapper {
    gradleVersion = gradlewVersion
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    group = 'com.mjc.school'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

    dependencies {
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        compileOnly "org.projectlombok:lombok:$lombokVersion"

        implementation "org.hibernate.validator:hibernate-validator:$hibernateValidatorVersion"
        implementation "org.glassfish.expressly:expressly:$expresslyVersion"

        implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"

        implementation "org.springframework:spring-context:$springVersion"
        implementation "org.springframework:spring-aop:$springVersion"
        implementation "org.aspectj:aspectjrt:$aspectjVersion"
        implementation "org.aspectj:aspectjweaver:$aspectjVersion"

        testImplementation "org.springframework:spring-test:$springVersion"
        testImplementation "org.junit.jupiter:junit-jupiter:$jupiterVersion"
        testImplementation "org.assertj:assertj-core:$assertjVersion"
        testImplementation "org.mockito:mockito-core:$mockitoVersion"
        testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
        testImplementation "com.tngtech.archunit:archunit:$archUnitVersion"

        annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
        implementation "org.mapstruct:mapstruct:$mapstructVersion"
    }
    test {
        useJUnitPlatform()
    }
}

task repack(type: Jar, dependsOn: ':module-main:build') {
    if (findProject(':module-main') != null) {
        entryCompression = ZipEntryCompression.STORED
        def buildJar = zipTree("${project(':module-main').buildDir}/libs/module-main.jar")
        from(buildJar) { into('/') }
        manifest {
            attributes(
                    'Main-Class': 'com.mjc.school.Main'
            )
        }
    }
}